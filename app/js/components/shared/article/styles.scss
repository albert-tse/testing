@import "../../../../scss/variables";

.article {
    display: flex;
    padding: 1rem;
    width: 100%;

    .articleContainer {
        background: white;
    }

    &.grid-item {
        padding: 0 1rem 3rem;
    }
    &.selected:not(.shared):not(.testShared) .articleContainer {
        .content {
            background: $palette-cyan-100;
        }
    }
    &.sharedTest .articleContainer {
        background-color: $palette-red-100;
    }
    &.shared .articleContainer {
        background-color: $palette-light-green-100;
    }

}

.container {
    display: flex;
    padding: 1rem 1.5rem 2rem;
    flex-wrap: wrap;
    will-change: scroll-position;
}

.articleContainer {
    display: flex;
    flex-direction: column;
    position: relative;

}

.content {
    padding: 0 1rem 0;
}

.thumbnail {
    min-height: 14rem;
    max-height: 14rem;
    min-width: 100%;
    max-width: 100%;
    overflow: hidden;
    background-repeat: none;
    background-size: cover;
}

.thumbnail img {
    max-width: 100%;
    min-height: 14rem;
    object-fit: cover;
    animation: fadeIn .5s ease-out;
}

.noImage {
    opacity: 0.1;
    width: 100%;
    background: url(../../../../images/logo.svg) no-repeat center center;
    background-size: cover;
}

.metadata {
    padding: 1rem 0 0.25rem;
}

.site {
    font-weight: bold;
    text-transform: uppercase;
}

.timeAgo {
    padding-left: 0.5rem;
    color: rgba(0, 0, 0, 0.54);
}

.site,
.timeAgo {
    font-size: 1.2rem;
}

.headline {
    display: block;
    margin: 0 0 1rem;

    header {
        display: block;
        font-size: 1.6rem;
        font-weight: 400;
        line-height: 2rem;
        overflow: hidden;
        min-height: calc(2rem*3);
        height: calc(2rem*3);
        max-height: calc(2rem*3);
    }

    a {
        color: black;
        margin-left: .2rem;
        [data-react-toolbox="font-icon"] {
            font-size: 1.6rem;
            position: relative;
            top: .2rem;
        }
    }
}

.headlineTooltip {
    display: none;
}

.headlineIssue {
    .headlineTooltip {
        display: inline-block;
        white-space: normal;

        [data-react-toolbox="font-icon"] {
            color: red;
        }
    }
}

.description {
    line-height: 1.6rem;
    min-height: calc(1.6rem*3);
    height: calc(1.6rem*3);
    overflow: hidden;
}

.topBar {
    display: flex;
    margin-top: -3.6rem;
    position: absolute;
    z-index: 1;
    width: 100%;
    justify-content: space-between;
    transform: translateY(3.6rem);
}

.actions {
    display: flex;
    padding: 1.4rem 0;
    align-items: center;
    justify-content: flex-end;
    height: 4.2rem;
}

@keyframes fadeIn {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1
    }
}

.primaryColor button span {
    color: $color-primary;
}

.articlePerf {
    display: inline-block;
    margin: auto 0px;
    padding: 1px 6px;
    height: 22px;
    &.average {
        background-color: #fb965b;
    }
    &.good {
        background-color: #fac85a;
    }
    &.veryGood {
        background-color: #96e150;
    }
}

.shareDialog {
    h3 {
        color: rgba(0,0,0,0.75);
    }

    strong {
        display: block;
        margin-top: 1rem;
    }

    [data-react-toolbox="button"] {
        margin: 0 0.5rem 0;

        &:last-of-type {
            margin-right: 0;
        }
    }
}

.linkToSimilar {
    padding-bottom: 1rem;
    display: block;
    color: $color-primary;
    font-size: 1.6rem;
    font-weight: 500;
    text-align: right;
}

.openInNew {
    transform: translateY(0.2rem);
    margin-left: 1rem;
    font-size: 1.6rem;
}

@media (min-width: $screen-xs-min) {
    .article {
        padding: 0.5rem;
        width: 50%;
    }
}

@media (min-width: $screen-sm-min) {
    .article {
        width: 33.33%;
    }
}
@media (min-width: 1024px) {
    .article {
        padding: 1rem 2rem 3rem;
        width: 25%;
    }

    .articleContainer:hover {
        .headline {
            text-decoration: underline;
        }

        .visibleOnHover {
            visibility: visible;
        }
    }

    .articleContainer:not(:hover) {
        background: none;

        .visibleOnHover {
            visibility: hidden;
        }

        .showOnHover {
            display: none;
        }
    }
}

@media (min-width: $screen-xxl-min) {
    .article {
        width: 20%;
    }
}
@media (min-width: $screen-xxxl-min) {
    .article {
        width: 16.66%;
    }
}
